name: "Interactive Parameter Pipeline with HTML Publish"

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  second-stage:
    runs-on: ubuntu-latest
    outputs:
      param1: ${{ steps.interactive-inputs.outputs.param1 }}
      param2: ${{ steps.interactive-inputs.outputs.param2 }}
      param3: ${{ steps.interactive-inputs.outputs.param3 }}
      param4: ${{ steps.interactive-inputs.outputs.param4 }}
      param5: ${{ steps.interactive-inputs.outputs.param5 }}
    steps:
      - name: Stage 2 - Ask for parameters interactively
        id: interactive-inputs
        uses: boasihq/interactive-inputs@v2
        with:
          ngrok-authtoken: ${{ secrets.NGROK_AUTHTOKEN }}
          notifier-slack-enabled: "false"
          notifier-discord-enabled: "false"
          timeout: 300
          title: "Please provide 5 parameters"
          interactive: |
            fields:
              - label: param1
                properties:
                  display: Parameter 1
                  type: text
                  required: true
              - label: param2
                properties:
                  display: Parameter 2
                  type: text
                  required: true
              - label: param3
                properties:
                  display: Parameter 3
                  type: text
                  required: true
              - label: param4
                properties:
                  display: Parameter 4
                  type: text
                  required: true
              - label: param5
                properties:
                  display: Parameter 5
                  type: text
                  required: true

  third-stage:
    runs-on: ubuntu-latest
    needs: second-stage
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create HTML report with cache-busting
        run: |
          mkdir -p public
          timestamp=$(date +%s)
          run_id="${{ github.run_number }}"
          cat <<EOF > public/index.html
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <title>Pipeline Parameters Report</title>
            <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
            <meta http-equiv="Pragma" content="no-cache" />
            <meta http-equiv="Expires" content="0" />
          </head>
          <body>
            <h1>Pipeline Parameters Report</h1>
            <ul>
              <li>Parameter 1: ${{ needs.second-stage.outputs.param1 }}</li>
              <li>Parameter 2: ${{ needs.second-stage.outputs.param2 }}</li>
              <li>Parameter 3: ${{ needs.second-stage.outputs.param3 }}</li>
              <li>Parameter 4: ${{ needs.second-stage.outputs.param4 }}</li>
              <li>Parameter 5: ${{ needs.second-stage.outputs.param5 }}</li>
            </ul>
            <p>Run ID: ${run_id}</p>
            <p>Generated at: $(date)</p>
            <p>Cache-buster: ${timestamp}</p>
            <p><a href="./history/${run_id}.html">View this run in history</a></p>
          </body>
          </html>
          EOF

          mkdir -p public/history
          cp public/index.html public/history/${run_id}.html

      - name: Publish HTML to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          publish_branch: gh-pages
          force_orphan: true

      - name: Show Report URL
        run: |
          echo "Live report URL (always latest):"
          echo "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/?v=$(date +%s)"
          echo "History URL for this run:"
          echo "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/history/${{ github.run_number }}.html"
