name: "Interactive Parameter Pipeline with HTML Publish"

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  first-stage:
    runs-on: ubuntu-latest
    steps:
      - name: Stage 1 - Echo message
        run: echo "Hello from Stage 1!"

  second-stage:
    runs-on: ubuntu-latest
    needs: first-stage
    outputs:
      param1: ${{ steps.interactive-inputs.outputs.param1 }}
      param2: ${{ steps.interactive-inputs.outputs.param2 }}
      param3: ${{ steps.interactive-inputs.outputs.param3 }}
      param4: ${{ steps.interactive-inputs.outputs.param4 }}
      param5: ${{ steps.interactive-inputs.outputs.param5 }}
    steps:
      - name: Stage 2 - Ask for parameters interactively
        id: interactive-inputs
        uses: boasihq/interactive-inputs@v2
        with:
          ngrok-authtoken: ${{ secrets.NGROK_AUTHTOKEN }}
          notifier-slack-enabled: "false"
          notifier-discord-enabled: "false"
          timeout: 300
          title: "Please provide 5 parameters"
          interactive: |
            fields:
              - label: param1
                properties:
                  display: Parameter 1
                  type: text
                  required: true
              - label: param2
                properties:
                  display: Parameter 2
                  type: text
                  required: true
              - label: param3
                properties:
                  display: Parameter 3
                  type: text
                  required: true
              - label: param4
                properties:
                  display: Parameter 4
                  type: text
                  required: true
              - label: param5
                properties:
                  display: Parameter 5
                  type: text
                  required: true

  third-stage:
    runs-on: ubuntu-latest
    needs: second-stage
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Generate HTML reports
        run: |
          mkdir -p public/history

          # Unique file name for this run
          RUN_ID=${{ github.run_number }}
          HISTORY_FILE="history/${RUN_ID}.html"

          # Create HTML for this run
          cat > public/${HISTORY_FILE} <<EOF
          <html><body><h1>Pipeline Parameters Report - Run #${RUN_ID}</h1>
          <p>Parameter 1: ${{ needs.second-stage.outputs.param1 }}</p>
          <p>Parameter 2: ${{ needs.second-stage.outputs.param2 }}</p>
          <p>Parameter 3: ${{ needs.second-stage.outputs.param3 }}</p>
          <p>Parameter 4: ${{ needs.second-stage.outputs.param4 }}</p>
          <p>Parameter 5: ${{ needs.second-stage.outputs.param5 }}</p>
          <p><a href="../index.html">Back to Latest</a></p>
          </body></html>
          EOF

          # Create "latest" HTML (overwrites every run)
          cat > public/index.html <<EOF
          <html><body><h1>Latest Pipeline Parameters</h1>
          <p>Parameter 1: ${{ needs.second-stage.outputs.param1 }}</p>
          <p>Parameter 2: ${{ needs.second-stage.outputs.param2 }}</p>
          <p>Parameter 3: ${{ needs.second-stage.outputs.param3 }}</p>
          <p>Parameter 4: ${{ needs.second-stage.outputs.param4 }}</p>
          <p>Parameter 5: ${{ needs.second-stage.outputs.param5 }}</p>
          <p><a href="history/">View History</a></p>
          </body></html>
          EOF

          # Update history index
          HISTORY_INDEX="public/history/index.html"
          mkdir -p public/history
          if [ ! -f "$HISTORY_INDEX" ]; then
            echo "<html><body><h1>Pipeline Run History</h1><ul>" > "$HISTORY_INDEX"
          fi
          sed -i '$d' "$HISTORY_INDEX" || true
          echo "<li><a href=\"${RUN_ID}.html\">Run #${RUN_ID}</a></li>" >> "$HISTORY_INDEX"
          echo "</ul></body></html>" >> "$HISTORY_INDEX"

      - name: Publish HTML to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          publish_branch: gh-pages

      - name: Show Report URLs
        run: |
          echo "Latest report:"
          echo "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
          echo "This run's history entry:"
          echo "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/history/${{ github.run_number }}.html"
          echo "History index:"
          echo "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/history/"
